# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-latest]
#        macos-latest, windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew :griffin:build --console=plain

    - name: Set up GraalVM
    - uses: DeLaGuardo/setup-graalvm@master
      with:
        graalvm-version: '19.3.0.java8' // GraalVM version, no pattern syntax available atm.
    - run: java -version

    - name: Install GraalVM native-image
      run: gu install native-image

    - name: Build native
      run: ./gradlew nativeImage --info

    - name: Test command line
      run: ./gradlew :tests:test --console=plain

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Package
        path: griffin/build/native-image

    - name: Upload Test Reports
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: Test
        path: tests/build/reports
