/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.2.1/userguide/tutorial_java_projects.html
 */


plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'


    id 'com.palantir.graal' version '0.6.0'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.1-jre'

    compile "info.picocli:picocli:4.2.0"
    compile "com.github.rjeschke:txtmark:0.13"
    compile "com.moandjiezana.toml:toml4j:0.4.0"
    compile "com.github.jknack:handlebars:4.1.2"
    compile "org.slf4j:slf4j-simple:1.7.12"
//    compile "org.mapdb:mapdb:1.0.7"
// https://mvnrepository.com/artifact/org.mapdb/mapdb
    compile 'org.mapdb:mapdb:3.0.8'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testCompile "junit:junit:4.10"

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

//    compile 'info.picocli:picocli:4.1.0'
    annotationProcessor 'info.picocli:picocli-codegen:4.1.0'

}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.compilerArgs += ["-Aproject=${project.name}"]
}

jar {
    manifest {
        attributes 'Main-Class': 'com.pawandubey.griffin.Griffin'
    }
}
application {
    // Define the main class for the application.
    mainClassName = 'com.pawandubey.griffin.Griffin'
}



task copyToLib(type: Copy) {
    into "${buildDir}/libs"
    from configurations.runtime
}


graal {
    mainClass 'com.pawandubey.griffin.Griffin'
    outputName 'griffin'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

build.dependsOn(copyToLib)
nativeImage.dependsOn build
